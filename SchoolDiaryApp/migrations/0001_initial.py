# Generated by Django 5.1.4 on 2024-12-08 14:54

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('class_id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('Name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('name', models.CharField(max_length=255, unique=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_id', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Classes',
            fields=[
                ('classes_id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('date', models.DateField()),
                ('lesson_num', models.IntegerField()),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='classe_id', to='SchoolDiaryApp.class')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='class_subject', to='SchoolDiaryApp.subject')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('student', 'Ucze≈Ñ'), ('teacher', 'Nauczyciel'), ('director', 'Dyrektor'), ('parent', 'Rodzic'), ('admin', 'Administrator')], default='student', max_length=10)),
                ('id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('pesel', models.CharField(max_length=11, unique=True)),
                ('login', models.CharField(max_length=255, unique=True)),
                ('Name', models.CharField(max_length=255)),
                ('Surname', models.CharField(max_length=255)),
                ('birth_date', models.DateField()),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='SchoolDiaryApp.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='Grate',
            fields=[
                ('grate_id', models.IntegerField(primary_key=True, serialize=False)),
                ('value', models.IntegerField()),
                ('weight', models.IntegerField()),
                ('category', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(max_length=1000)),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grated_class', to='SchoolDiaryApp.classes')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grated_student', to='SchoolDiaryApp.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('date', models.DateField()),
                ('topic', models.CharField(max_length=100)),
                ('content', models.TextField(max_length=1000)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='received_messages', to='SchoolDiaryApp.customuser')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sent_messages', to='SchoolDiaryApp.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='SchoolDiaryApp.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='SchoolDiaryApp.customuser')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='directors_school', to='SchoolDiaryApp.school')),
            ],
        ),
        migrations.AddField(
            model_name='class',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='classes_school', to='SchoolDiaryApp.school'),
        ),
        migrations.CreateModel(
            name='Announcements',
            fields=[
                ('announcement_id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('topic', models.CharField(max_length=255)),
                ('content', models.TextField(max_length=1000)),
                ('date', models.DateField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='author_of_announcement', to='SchoolDiaryApp.customuser')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='announcements_school', to='SchoolDiaryApp.school')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parent_child', to='SchoolDiaryApp.parent')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='SchoolDiaryApp.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='Frequency',
            fields=[
                ('frequency_id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('type', models.CharField(max_length=2)),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='frequencies_class', to='SchoolDiaryApp.classes')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='students_frequency', to='SchoolDiaryApp.student')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='SchoolDiaryApp.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('date', models.DateField()),
                ('category', models.CharField(max_length=20)),
                ('subject', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=1000)),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='class_event', to='SchoolDiaryApp.class')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='author_of_event', to='SchoolDiaryApp.teacher')),
            ],
        ),
        migrations.AddField(
            model_name='classes',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='class_teacher', to='SchoolDiaryApp.teacher'),
        ),
        migrations.AddField(
            model_name='class',
            name='supervising_teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supervising_teacher', to='SchoolDiaryApp.teacher'),
        ),
    ]
